# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/

# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  
  # This is base package location /$GOPATH/src/github.com/go-packg
  # base-path: /go/src/github.com/go-packg
  
  steps:                   
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - wercker/setup-go-workspace:
        package-dir: github.com/go-packg/dev/

    # Activate Go modules inside $GOPATH (Add this to your ~/.bash_profile or ~/.bashrc file)
    - script:
        name: activate go modules 
        code: export GO111MODULE=on            
    
    # Init go modules
    - script:
        name: go module init
        code: go mod init        
    
    # Shows exported vars to child process    
    - script:
        name: env
        code: env
                
    - wercker/golint:
        exclude: "vendor"
        
    # Build the project
    - script:
        name: go build
        code: |
          # go build ./...
          go build src/dev/cmd/services/impl/go-service
                                  
    # Test the project
    - script:
        name: go test
        code: |
           go test ./...

    - script:
        name: copy files to wercker output
        code: |
           #cp -R ./ ${WERCKER_OUTPUT_DIR}
           cp go-service ${WERCKER_OUTPUT_DIR}

### Docker Deployment
deploy:

  steps:
  
    # This deploys to DockerHub
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        cmd: /pipeline/source/go-service
        port: "8080"
        tag: latest
        repository: $DOCKER_USERNAME/dockerhub
        registry: https://registry.hub.docker.com
