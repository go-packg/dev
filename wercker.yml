# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/

# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  
  # This is base package location /$GOPATH/src/github.com/go-packg
  # base-path: /go/src/github.com/go-packg
  
  steps:                   
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - wercker/setup-go-workspace:
        package-dir: github.com/go-packg/dev/
                
    # Shows exported vars to child process    
    - script:
        name: env
        code: env

    # Gets the dependencies
    #- script:
    #    name: go get
     #   code: |
          # use network to update the named packages
          #go get -u github.com/go-packg/dev/pkg/...
          
    #- script:
    #    name: go get
    #    code: |
    #      cd $WERCKER_SOURCE_DIR
    #        go version
    #        go get -u github.com/Masterminds/glide
    #        export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
    #        glide install  

    - wercker/golint:
        exclude: "vendor"
        
    # Build the project
    - script:
        name: go build
        code: |
          # go build ./...
          go build github.com/go-packg/dev/cmd/cloudnativego/go-primer/npcs
                                  
    # Test the project
    - script:
        name: go test
        code: |
           go test ./...

    - script:
        name: copy files to wercker output
        code: |
           cp -R ./ ${WERCKER_OUTPUT_DIR}
       
    - script:
        name: ls npcs
        code: echo ./

deploy:
  steps:
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        cmd: ${WERCKER_OUTPUT_DIR}/npcs
        port: "8080"
        tag: latest
        repository: $DOCKER_USERNAME/dockerhub
        # registry: https://registry.hub.docker.com
        
    - script:
        name: container
        code: echo "container successfully created"
#
#    - cng/cf-deploy:
#        api: $API
#        user: $USER
#        password: $PASSWORD
#        org: $ORG
#        space: $SPACE
#        appname: wercker-step-npcs
#        docker_image: valerizimin/dockerhub