# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/

# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  
  # This is base package locationï¼š /$$GOPATH/src/github.com/go-packg
  # base-path: /go/src/github.com/go-packg
  
  steps:                   
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - wercker/setup-go-workspace:
        package-dir: github.com/go-packg/dev/
                
    # Shows exported vars to child process    
    - script:
        name: env
        code: env

    # Gets the dependencies
    - script:
        name: go get
        code: |
          # use network to update the named packages
          #go get -u github.com/go-packg/dev/pkg/...
          
      - script:
        name: glide install
        code: |
          export GO15VENDOREXPERIMENT=1
          export GLIDE_VERSION=0.8.3
          curl -LO https://github.com/Masterminds/glide/releases/download/${GLIDE_VERSION}/glide-${GLIDE_VERSION}-linux-amd64.tar.gz
          tar -xvzf glide-${GLIDE_VERSION}-linux-amd64.tar.gz
          ./linux-amd64/glide install --quick     

    - wercker/golint:
        exclude: "vendor"
        
    # Build the project
    - script:
        name: go build
        code: |
          # go build ./...
          go build github.com/go-packg/dev/cmd/cloudnativego/go-primer/npcs
                                  
    # Test the project
    - script:
        name: go test
        code: |
           go test ./...